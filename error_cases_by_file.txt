# Minishell Error Cases by Test Files

This document contains error cases collected from the 42_minishell_tester, organized by test file.

## FORMAT
Each test follows this format:
```
command to run

# Bash output:
standard output
standard error
Exit code: N

#```
echo hi > $NONEXISTVAR

# Bash output:
bash: $NONEXISTVAR: ambiguous redirect
Exit code: 1

# Minishell output:
open (redirect out): No such file or directory
Exit code: 1
```output:
standard output 
standard error
Exit code: N
```

-------------------------------------```
< < file

# Bash o```
> > file

# Bash output:
bash: syntax error near unexpected token `>'
Exit code: 2

# Minishell output:
(no error message)
Exit code: 0
```: syntax error near unexpected token `<'
Exit code: 2

# Minishell output:
(no error message)
Exit code: 0
```---------------------------------------------------
# 1_BUILTINS.SH
---------------------------------------------------------------------------------------------------

## Echo with quote handling

```
echo '"$USER"'

# Bash output:
"$USER"
Exit code: 0

# Minishell output:
"$USER"
Exit code: 0
```

```
echo "'$USER'"

# Bash output:
'ekakhmad'
Exit code: 0

# Minishell output:
'ekakhmad'
Exit code: 0
```

```
echo '"'$USER'"'

# Bash output:
"ekakhmad"
Exit code: 0

# Minishell output:
"$USER"
Exit code: 0
```

```
echo $"HOME"

# Bash output:
HOME
Exit code: 0

# Minishell output:
/home/ekakhmad
Exit code: 0
```

## Export with invalid identifiers

```
export 1TEST=value

# Bash output:
bash: export: `1TEST=value': not a valid identifier
Exit code: 1

# Minishell output:
minishell: export: `1TEST=value': not a valid identifier
Exit code: 1
```

```
export ?=hallo

# Bash output:
bash: export: `?=hallo': not a valid identifier
Exit code: 1

# Minishell output:
minishell: export: `?=hallo': not a valid identifier
Exit code: 1
```

## CD with errors

```
cd /nonexistent/directory

# Bash output:
bash: cd: /nonexistent/directory: No such file or directory
Exit code: 1

# Minishell output:
minishell: cd: /nonexistent/directory: No such file or directory
Exit code: 1
```

```
cd /etc /var

# Bash output:
bash: cd: too many arguments
Exit code: 1

# Minishell output:
minishell: cd: too many arguments
Exit code: 1
```

## Exit status differences

```
exit 9223372036854775808

# Bash output:
bash: exit: 9223372036854775808: numeric argument required
Exit code: 2

# Minishell output:
minishell: exit: 9223372036854775808: numeric argument required
Exit code: 2
```

---------------------------------------------------------------------------------------------------
# 1_PIPELINES.SH
---------------------------------------------------------------------------------------------------

## Command not found in pipeline

```
ls | nonexistentcmd | wc -l

# Bash output:
bash: nonexistentcmd: command not found
0
Exit code: 0

# Minishell output:
minishell: nonexistentcmd: command not found
(output varies)
Exit code: 127
```

## Syntax errors in pipeline

```
ls | | wc -l

# Bash output:
bash: syntax error near unexpected token `|'
Exit code: 2

# Minishell output:
minishell: syntax error near unexpected token `|'
Exit code: 2
```

```
| ls

# Bash output:
bash: syntax error near unexpected token `|'
Exit code: 2

# Minishell output:
minishell: syntax error near unexpected token `|'
Exit code: 2
```

## Exit status from pipeline

```
ls -la | grep no_such_file | wc -l

# Bash output:
0
Exit code: 0

# Minishell output:
0
Exit code: 0
```

```
cat nofile | grep hello

# Bash output:
cat: nofile: No such file or directory
Exit code: 1

# Minishell output:
cat: nofile: No such file or directory
Exit code: 1
```

---------------------------------------------------------------------------------------------------
# 1_REDIRS.SH
---------------------------------------------------------------------------------------------------

## Redirection to invalid locations

```
echo hello > /nonexistent/file

# Bash output:
bash: /nonexistent/file: No such file or directory
Exit code: 1

# Minishell output:
open (redirect out): No such file or directory
Exit code: 1
```

```
echo hello > /etc/passwd

# Bash output:
bash: /etc/passwd: Permission denied
Exit code: 1

# Minishell output:
open (redirect out): Permission denied
Exit code: 1
```

## Heredoc errors

```
$ << EOF
> test
> EOF
> < doesnotexist

# Bash output:
bash: doesnotexist: No such file or directory
Exit code: 1

# Minishell output:
minishell: doesnotexist: No such file or directory
Exit code: 1
```

## Ambiguous redirect

```
$ echo hi > $NONEXISTVAR

# Bash output:
bash: $NONEXISTVAR: ambiguous redirect
Exit code: 1

# Minishell output:
minishell: $NONEXISTVAR: ambiguous redirect
Exit code: 1
```

---------------------------------------------------------------------------------------------------
# 1_SCMDS.SH
---------------------------------------------------------------------------------------------------

## Simple command errors

```
$ doesnotexist

# Bash output:
bash: doesnotexist: command not found
Exit code: 127

# Minishell output:
minishell: doesnotexist: command not found
Exit code: 127
```

```
$ ./directory

# Bash output:
bash: ./directory: Is a directory
Exit code: 126

# Minishell output:
minishell: ./directory: Is a directory
Exit code: 126
```

```
$ /etc/passwd

# Bash output:
bash: /etc/passwd: Permission denied
Exit code: 126

# Minishell output:
minishell: /etc/passwd: Permission denied
Exit code: 126
```

---------------------------------------------------------------------------------------------------
# 1_VARIABLES.SH
---------------------------------------------------------------------------------------------------

## Variable expansion differences

```
$ echo $"HOME"

# Bash output:
HOME
Exit code: 0

# Minishell output:
$HOME
Exit code: 0
```

```
$ echo "$?"

# Bash output:
0
Exit code: 0

# Minishell output:
0
Exit code: 0
```

```
$ echo $NONEXISTVAR

# Bash output:
(empty line)
Exit code: 0

# Minishell output:
(empty line)
Exit code: 0
```

```
$ echo $USER$NONEXISTVAR$HOME

# Bash output:
ekakhmad/home/ekakhmad
Exit code: 0

# Minishell output:
ekakhmad/home/ekakhmad
Exit code: 0
```

---------------------------------------------------------------------------------------------------
# 2_CORRECTION.SH
---------------------------------------------------------------------------------------------------

## Quote handling

```
$ echo "'$USER'"

# Bash output:
'ekakhmad'
Exit code: 0

# Minishell output:
'ekakhmad'
Exit code: 0
```

```
$ echo "$USER""$USER"

# Bash output:
ekakhmadekakhmad
Exit code: 0

# Minishell output:
ekakhmadekakhmad
Exit code: 0
```

## Complex command chains

```
$ echo hi | cat | cat | cat | cat | cat

# Bash output:
hi
Exit code: 0

# Minishell output:
hi
Exit code: 0
```

```
$ echo test > file1 > file2 > file3

# Bash output:
(creates file3 with "test")
Exit code: 0

# Minishell output:
(creates file3 with "test")
Exit code: 0
```

---------------------------------------------------------------------------------------------------
# 2_PATH_CHECK.SH
---------------------------------------------------------------------------------------------------

## PATH handling

```
$ PATH= ls

# Bash output:
bash: ls: No such file or directory
Exit code: 127

# Minishell output:
minishell: ls: command not found
Exit code: 127
```

```
$ PATH=/notapath:/stillnotapath:/etc ls

# Bash output:
bash: ls: No such file or directory
Exit code: 127

# Minishell output:
minishell: ls: command not found
Exit code: 127
```

```
$ unset PATH
$ ls

# Bash output:
bash: ls: No such file or directory
Exit code: 127

# Minishell output:
minishell: ls: command not found
Exit code: 127
```

---------------------------------------------------------------------------------------------------
# 8_SYNTAX_ERRORS.SH
---------------------------------------------------------------------------------------------------

## Syntax error cases

```
$ |

# Bash output:
bash: syntax error near unexpected token `|'
Exit code: 2

# Minishell output:
minishell: syntax error near unexpected token `|'
Exit code: 2
```

```
```
<

# Bash output:
bash: syntax error near unexpected token `newline'
Exit code: 2

# Minishell output:
(no error message)
Exit code: 0
```
```

```
$ >

# Bash output:
bash: syntax error near unexpected token `newline'
Exit code: 2

# Minishell output:
minishell: syntax error near unexpected token `newline'
Exit code: 2
```

```
$ echo "unclosed quote

# Bash output:
bash: unexpected EOF while looking for matching `"'
bash: syntax error: unexpected end of file
Exit code: 2

# Minishell output:
minishell: syntax error: unexpected end of file
Exit code: 2
```

```
$ < < file

# Bash output:
bash: syntax error near unexpected token `<'
Exit code: 2

# Minishell output:
minishell: syntax error near unexpected token `<'
Exit code: 2
```

```
$ > > file

# Bash output:
bash: syntax error near unexpected token `>'
Exit code: 2

# Minishell output:
minishell: syntax error near unexpected token `>'
Exit code: 2
```

---------------------------------------------------------------------------------------------------
# 9_GO_WILD.SH
---------------------------------------------------------------------------------------------------

## Wildcard handling

```
$ echo *

# Bash output:
(list of files in current directory)
Exit code: 0

# Minishell output:
(list of files in current directory)
Exit code: 0
```

```
$ echo "*"

# Bash output:
*
Exit code: 0

# Minishell output:
*
Exit code: 0
```

```
$ echo '*'

# Bash output:
*
Exit code: 0

# Minishell output:
*
Exit code: 0
```

```
$ echo *.c

# Bash output:
(list of .c files or "*.c" if none)
Exit code: 0

# Minishell output:
(list of .c files or "*.c" if none)
Exit code: 0
```

These are the main error cases collected from the tester files. Each section contains relevant test cases that demonstrate the differences between bash and minishell behavior.
